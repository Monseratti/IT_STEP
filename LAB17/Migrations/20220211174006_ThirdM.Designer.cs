// <auto-generated />
using System;
using LAB17;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB17.Migrations
{
    [DbContext(typeof(AutoContext))]
    [Migration("20220211174006_ThirdM")]
    partial class ThirdM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LAB17.Classes.Autos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientsId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientsId");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("LAB17.Classes.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LAB17.Classes.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutoId")
                        .HasColumnType("int");

                    b.Property<int?>("AutosId")
                        .HasColumnType("int");

                    b.Property<int>("ServiseId")
                        .HasColumnType("int");

                    b.Property<int?>("ServisesId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutosId");

                    b.HasIndex("ServisesId");

                    b.HasIndex("WorkersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LAB17.Classes.Servises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servises");
                });

            modelBuilder.Entity("LAB17.Classes.Workers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("WorkerEndEmpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WorkerStartEmpDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("LAB17.Classes.Autos", b =>
                {
                    b.HasOne("LAB17.Classes.Clients", null)
                        .WithMany("Autos")
                        .HasForeignKey("ClientsId");
                });

            modelBuilder.Entity("LAB17.Classes.Orders", b =>
                {
                    b.HasOne("LAB17.Classes.Autos", null)
                        .WithMany("Orders")
                        .HasForeignKey("AutosId");

                    b.HasOne("LAB17.Classes.Servises", null)
                        .WithMany("Orders")
                        .HasForeignKey("ServisesId");

                    b.HasOne("LAB17.Classes.Workers", null)
                        .WithMany("Orders")
                        .HasForeignKey("WorkersId");
                });

            modelBuilder.Entity("LAB17.Classes.Autos", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LAB17.Classes.Clients", b =>
                {
                    b.Navigation("Autos");
                });

            modelBuilder.Entity("LAB17.Classes.Servises", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LAB17.Classes.Workers", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
